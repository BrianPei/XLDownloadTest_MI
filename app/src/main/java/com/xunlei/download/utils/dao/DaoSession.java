package com.xunlei.download.utils.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.xunlei.download.utils.dao.MARKET;
import com.xunlei.download.utils.dao.HTTP;
import com.xunlei.download.utils.dao.MAGNET;
import com.xunlei.download.utils.dao.HTTPS;
import com.xunlei.download.utils.dao.TESTURL;

import com.xunlei.download.utils.dao.MARKETDao;
import com.xunlei.download.utils.dao.HTTPDao;
import com.xunlei.download.utils.dao.MAGNETDao;
import com.xunlei.download.utils.dao.HTTPSDao;
import com.xunlei.download.utils.dao.TESTURLDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig mARKETDaoConfig;
    private final DaoConfig hTTPDaoConfig;
    private final DaoConfig mAGNETDaoConfig;
    private final DaoConfig hTTPSDaoConfig;
    private final DaoConfig tESTURLDaoConfig;

    private final MARKETDao mARKETDao;
    private final HTTPDao hTTPDao;
    private final MAGNETDao mAGNETDao;
    private final HTTPSDao hTTPSDao;
    private final TESTURLDao tESTURLDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        mARKETDaoConfig = daoConfigMap.get(MARKETDao.class).clone();
        mARKETDaoConfig.initIdentityScope(type);

        hTTPDaoConfig = daoConfigMap.get(HTTPDao.class).clone();
        hTTPDaoConfig.initIdentityScope(type);

        mAGNETDaoConfig = daoConfigMap.get(MAGNETDao.class).clone();
        mAGNETDaoConfig.initIdentityScope(type);

        hTTPSDaoConfig = daoConfigMap.get(HTTPSDao.class).clone();
        hTTPSDaoConfig.initIdentityScope(type);

        tESTURLDaoConfig = daoConfigMap.get(TESTURLDao.class).clone();
        tESTURLDaoConfig.initIdentityScope(type);

        mARKETDao = new MARKETDao(mARKETDaoConfig, this);
        hTTPDao = new HTTPDao(hTTPDaoConfig, this);
        mAGNETDao = new MAGNETDao(mAGNETDaoConfig, this);
        hTTPSDao = new HTTPSDao(hTTPSDaoConfig, this);
        tESTURLDao = new TESTURLDao(tESTURLDaoConfig, this);

        registerDao(MARKET.class, mARKETDao);
        registerDao(HTTP.class, hTTPDao);
        registerDao(MAGNET.class, mAGNETDao);
        registerDao(HTTPS.class, hTTPSDao);
        registerDao(TESTURL.class, tESTURLDao);
    }
    
    public void clear() {
        mARKETDaoConfig.getIdentityScope().clear();
        hTTPDaoConfig.getIdentityScope().clear();
        mAGNETDaoConfig.getIdentityScope().clear();
        hTTPSDaoConfig.getIdentityScope().clear();
        tESTURLDaoConfig.getIdentityScope().clear();
    }

    public MARKETDao getMARKETDao() {
        return mARKETDao;
    }

    public HTTPDao getHTTPDao() {
        return hTTPDao;
    }

    public MAGNETDao getMAGNETDao() {
        return mAGNETDao;
    }

    public HTTPSDao getHTTPSDao() {
        return hTTPSDao;
    }

    public TESTURLDao getTESTURLDao() {
        return tESTURLDao;
    }

}
